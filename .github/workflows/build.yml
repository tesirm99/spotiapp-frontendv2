name: Build

on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:

  coverage-linting:
    name: Coverage & Linting
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16.x'

      - name: Install Ionic
        run: npm install -g @ionic/cli

      - name: Install dependencies
        run: npm install

      - name: Unit tests
        uses: coactions/setup-xvfb@v1
        with:
          run: npm run test:prod
        continue-on-error: true

      - name: Code Coverage Summary Report
        uses: irongut/CodeCoverageSummary@v1.3.0
        with:
          filename: coverage/cobertura-coverage.xml
          badge: true
          format: 'markdown'
          output: 'both'
        continue-on-error: true
      - name: Add Coverage PR Comment
        uses: marocchino/sticky-pull-request-comment@v2
        if: github.event_name == 'pull_request'
        with:
          recreate: true
          path: code-coverage-results.md
      - name: Write to Job Summary
        run: cat code-coverage-results.md >> $GITHUB_STEP_SUMMARY
      
      - name: Save Code Linting Report JSON
        run: npm run lint:json -- --fix
        continue-on-error: true 
      - name: Annotate Code Linting Results
        uses: ataylorme/eslint-annotate-action@v2
        with:
          repo-token: "${{ secrets.GITHUB_TOKEN }}" 
          report-json: "./coverage/eslint-result.json"



  tests-front:
    runs-on: ubuntu-22.04
    container: cypress/browsers:node16.16.0-chrome107-ff107-edge
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
      - name: Setup Node
        uses: actions/setup-node@v1
        with:
          node-version: 16
      - name: Cypress run
        uses: cypress-io/github-action@v5
        with:
          build: npm run build
          start: npm run start
          browser: chrome
        continue-on-error: true 

  
  build-and-push-front:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Authenticate to Google Cloud
        id: auth
        uses: google-github-actions/auth@v0
        with:
          credentials_json: '${{ secrets.GCR_DEVOPS_SERVICE_ACCOUNT_KEY }}'
      - name: Building and pushing the image
        uses: RafikFarhad/push-to-gcr-github-action@v5-beta
        with:
          registry: gcr.io
          project_id: ${{ secrets.PROJECT_ID }}
          image_name: spotiapp-front
          image_tag: latest, ${{ github.sha }}
          dockerfile: ./Dockerfile
          context: ./ 
    